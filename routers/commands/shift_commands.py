from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from keyboards.employe_keyboard import get_point_selection_keyboard, get_shift_management_keyboard, \
    get_confirmation_keyboard, get_photo_confirmation_keyboard
from fsm.shift_fsm import ShiftStates
from aiogram.filters import Command, StateFilter

router = Router()


@router.message(Command("start_shift"), F.from_user.id.in_({5477880310,1614891721}))
async def start_command(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂:", reply_markup=get_point_selection_keyboard())
    await state.set_state(ShiftStates.choose_point)


@router.callback_query(F.data == "point_bliski")
@router.callback_query(F.data == "point_aioli")
async def select_point(callback: types.CallbackQuery, state: FSMContext):
    point = "Bliski Wschod" if callback.data == "point_bliski" else "Aioli"
    await state.update_data(point=point)
    await callback.message.edit_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É: <b>{point}</b>.\n\n–ù–∞–∂–º–∏—Ç–µ <i>'–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É'</i>. –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ç–æ—á–∫—É.",
        reply_markup=get_shift_management_keyboard())


@router.callback_query(F.data == "open_shift")
async def open_shift(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –∫–∞—Å—Å–µ:")
    await state.set_state(ShiftStates.enter_cash)


@router.callback_query(F.data == "back")
async def back(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂:", reply_markup=get_point_selection_keyboard())
    await state.set_state(ShiftStates.choose_point)


@router.message(StateFilter(ShiftStates.enter_cash))
async def enter_cash(message: types.Message, state: FSMContext):
    try:
        cash = float(message.text)
        await state.update_data(cash=cash)
        await message.answer(
            f"–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É: <b>{cash}</b>.\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
            reply_markup=get_confirmation_keyboard()
        )
        await state.set_state(ShiftStates.confirm_cash)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å—É–º–º—ã –≤ –∫–∞—Å—Å–µ.")


@router.callback_query(StateFilter(ShiftStates.confirm_cash), F.data == "confirm")
async def confirm_cash(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞.")
    await state.set_state(ShiftStates.upload_tobacco_photo)


@router.callback_query(StateFilter(ShiftStates.confirm_cash), F.data == "change")
async def change_cash(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ –∫–∞—Å—Å–µ:")
    await state.set_state(ShiftStates.enter_cash)


@router.message(StateFilter(ShiftStates.upload_tobacco_photo), F.photo)
async def upload_tobacco_photo(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    tobacco_photo = message.photo[-1].file_id
    await state.update_data(tobacco_photo=tobacco_photo)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await message.answer_photo(
        photo=tobacco_photo,
        caption="–í—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ.",
        reply_markup=get_photo_confirmation_keyboard()
    )
    await state.set_state(ShiftStates.confirm_tobacco_photo)


@router.callback_query(StateFilter(ShiftStates.confirm_tobacco_photo), F.data == "confirm_photo")
async def confirm_photo(callback: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    data = await state.get_data()
    point = data.get("point")
    cash = data.get("cash")

    await callback.message.edit_caption(
        caption=(
            f"–°–º–µ–Ω–∞ –Ω–∞ —Ç–æ—á–∫–µ <b>{point}</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞.\n"
            f"–°—É–º–º–∞ –≤ –∫–∞—Å—Å–µ: <b>{cash}</b>.\n–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n\n"
            f"–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! üòä"
        )
    )
    await state.set_state(ShiftStates.working)


@router.callback_query(StateFilter(ShiftStates.confirm_tobacco_photo), F.data == "change_photo")
async def change_photo(callback: types.CallbackQuery, state: FSMContext):
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    await callback.message.edit_caption(
        caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞.",
    )
    await state.set_state(ShiftStates.upload_tobacco_photo)


@router.message(Command("close_shift"), F.from_user.id.in_({5477880310, 1614891721}), StateFilter(ShiftStates.working))
async def close_shift_start(message: types.Message, state: FSMContext):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–ø–ø–æ—Ä—Ç –∫–∞—Å—Å—ã (—Å—É–º–º–∞ –≤ –∫–∞—Å—Å–µ):")
    await state.set_state(ShiftStates.enter_cash_report)


@router.message(StateFilter(ShiftStates.enter_cash_report))
async def enter_cash_report(message: types.Message, state: FSMContext):
    try:
        cash_report = float(message.text)
        await state.update_data(cash_report=cash_report)
        await message.answer(
            f"–í—ã –≤–≤–µ–ª–∏ —Ä–∞–ø–æ—Ä—Ç –∫–∞—Å—Å—ã: <b>{cash_report}</b>. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ.",
            reply_markup=get_confirmation_keyboard()
        )
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")


@router.callback_query(StateFilter(ShiftStates.enter_cash_report), F.data == "confirm")
async def confirm_cash_report(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ä–∞–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞.")
    await state.set_state(ShiftStates.enter_terminal_report)


@router.callback_query(StateFilter(ShiftStates.enter_cash_report), F.data == "change")
async def retry_cash_report(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–ø–æ—Ä—Ç –∫–∞—Å—Å—ã –µ—â—ë —Ä–∞–∑.")
    await state.set_state(ShiftStates.enter_cash_report)


@router.message(StateFilter(ShiftStates.enter_terminal_report))
async def enter_terminal_report(message: types.Message, state: FSMContext):
    try:
        terminal_report = float(message.text)
        await state.update_data(terminal_report=terminal_report)
        await message.answer(
            f"–í—ã –≤–≤–µ–ª–∏ —Ä–∞–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: <b>{terminal_report}</b>. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ.",
            reply_markup=get_confirmation_keyboard()
        )
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")


@router.callback_query(StateFilter(ShiftStates.enter_terminal_report), F.data == "confirm")
async def confirm_terminal_report(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ—Å—Ç–∞—Ç–∫–∞ —Ç–∞–±–∞–∫–∞.")
    await state.set_state(ShiftStates.upload_remaining_tobacco)


@router.callback_query(StateFilter(ShiftStates.enter_terminal_report), F.data == "change")
async def retry_terminal_report(callback: types.CallbackQuery):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –µ—â—ë —Ä–∞–∑.")


@router.message(StateFilter(ShiftStates.upload_remaining_tobacco), F.photo)
async def upload_remaining_tobacco(message: types.Message, state: FSMContext):
    tobacco_photo = message.photo[-1].file_id
    await state.update_data(tobacco_photo=tobacco_photo)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    data = await state.get_data()
    cash_report = data.get("cash_report")
    terminal_report = data.get("terminal_report")

    await message.answer_photo(
        photo=tobacco_photo,
        caption=(
            f"–†–∞–ø–æ—Ä—Ç –∫–∞—Å—Å—ã: <b>{cash_report}</b>\n"
            f"–†–∞–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: <b>{terminal_report}</b>\n"
            f"–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.\n\n"
            "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å."
        ),
        reply_markup=get_confirmation_keyboard()
    )
    await state.set_state(ShiftStates.confirm_close_shift)


@router.callback_query(StateFilter(ShiftStates.confirm_close_shift), F.data == "confirm")
async def finish_shift(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –∏–ª–∏ –∂—É—Ä–Ω–∞–ª (–ø—Ä–∏–º–µ—Ä).
    point = data.get("point")
    cash_report = data.get("cash_report")
    terminal_report = data.get("terminal_report")
    tobacco_photo = data.get("tobacco_photo")

    await callback.message.edit_caption(
        caption=(
            f"–°–º–µ–Ω–∞ –Ω–∞ —Ç–æ—á–∫–µ <b>{point}</b> –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"
            f"–†–∞–ø–æ—Ä—Ç –∫–∞—Å—Å—ã: <b>{cash_report}</b>\n"
            f"–†–∞–ø–æ—Ä—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞: <b>{terminal_report}</b>\n\n"
            "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
        ),
        parse_mode="HTML",
        reply_markup=None
    )
    await state.clear()


@router.callback_query(StateFilter(ShiftStates.confirm_close_shift), F.data == "change")
async def cancel_finish_shift(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_caption(
        "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–º–µ–Ω—ã –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å",
        reply_markup=None
    )
    await state.set_state(ShiftStates.working)