from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from keyboards.employe_keyboard import get_point_selection_keyboard, get_shift_management_keyboard, \
    get_confirmation_keyboard, get_photo_confirmation_keyboard
from fsm.shift_fsm import ShiftStates
from aiogram.filters import Command, StateFilter

router = Router()


@router.message(Command("start"), F.from_user.id.in_({5477880310}))
async def start_command(message: types.Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂:", reply_markup=get_point_selection_keyboard())
    await state.set_state(ShiftStates.choose_point)


@router.callback_query(F.data == "point_bliski")
@router.callback_query(F.data == "point_aioli")
async def select_point(callback: types.CallbackQuery, state: FSMContext):
    point = "Bliski Wschod" if callback.data == "point_bliski" else "Aioli"
    await state.update_data(point=point)
    await callback.message.edit_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É: <b>{point}</b>.\n\n–ù–∞–∂–º–∏—Ç–µ <i>'–û—Ç–∫—Ä—ã—Ç—å —Å–º–µ–Ω—É'</i>. –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é —Ç–æ—á–∫—É.",
                                     reply_markup=get_shift_management_keyboard())


@router.callback_query(F.data == "open_shift")
async def open_shift(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –∫–∞—Å—Å–µ:")
    await state.set_state(ShiftStates.enter_cash)


@router.callback_query(F.data == "back")
async def back(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂:", reply_markup=get_point_selection_keyboard())
    await state.set_state(ShiftStates.choose_point)


@router.message(StateFilter(ShiftStates.enter_cash))
async def enter_cash(message: types.Message, state: FSMContext):
    try:
        cash = float(message.text)
        await state.update_data(cash=cash)
        await message.answer(
            f"–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É: <b>{cash}</b>.\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.",
            reply_markup=get_confirmation_keyboard()
        )
        await state.set_state(ShiftStates.confirm_cash)
    except ValueError:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å—É–º–º—ã –≤ –∫–∞—Å—Å–µ.")


@router.callback_query(StateFilter(ShiftStates.confirm_cash), F.data == "confirm_cash")
async def confirm_cash(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞.")
    await state.set_state(ShiftStates.upload_tobacco_photo)


@router.callback_query(StateFilter(ShiftStates.confirm_cash), F.data == "change_cash")
async def change_cash(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ –∫–∞—Å—Å–µ:")
    await state.set_state(ShiftStates.enter_cash)


@router.message(StateFilter(ShiftStates.upload_tobacco_photo), F.photo)
async def upload_tobacco_photo(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    tobacco_photo = message.photo[-1].file_id
    await state.update_data(tobacco_photo=tobacco_photo)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await message.answer_photo(
        photo=tobacco_photo,
        caption="–í—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—Å—ë –≤–µ—Ä–Ω–æ.",
        reply_markup=get_photo_confirmation_keyboard()
    )
    await state.set_state(ShiftStates.confirm_tobacco_photo)


@router.callback_query(StateFilter(ShiftStates.confirm_tobacco_photo), F.data == "confirm_photo")
async def confirm_photo(callback: types.CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    data = await state.get_data()
    point = data.get("point")
    cash = data.get("cash")

    await callback.message.edit_caption(
        caption=(
            f"–°–º–µ–Ω–∞ –Ω–∞ —Ç–æ—á–∫–µ <b>{point}</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞.\n"
            f"–°—É–º–º–∞ –≤ –∫–∞—Å—Å–µ: <b>{cash}</b>.\n–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n\n"
            f"–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è! üòä"
        )
    )
    await state.set_state(ShiftStates.working)


@router.callback_query(StateFilter(ShiftStates.confirm_tobacco_photo), F.data == "change_photo")
async def change_photo(callback: types.CallbackQuery, state: FSMContext):
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
    await callback.message.edit_caption(
        caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–µ—Å–∞ —Ç–∞–±–∞–∫–∞.",
    )
    await state.set_state(ShiftStates.upload_tobacco_photo)
